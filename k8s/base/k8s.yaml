---
# Source: docker-compose/templates/kubernetes-env-configmap.yaml
apiVersion: v1
data:
  HUGGINGFACE_EMBEDDING_MODEL_DEFAULT: 'thellert/physbert_cased'
  HUGGINGFACE_FINETUNED_EMBEDDING_MODEL: ''
  OLLAMA_BASE_URL: 'http://ollama:11434'
  OLLAMA_MODEL_DEFAULT: 'ollama:llama3.1'
  OPENAI_API_KEY: ''
  OPENAI_BASE_URL: ''
  GOOGLE_API_KEY: ''
  STANFORD_API_KEY: ''
  STANFORD_BASE_URL: 'https://aiapi-prod.stanford.edu/v1'
  OPENSEARCH_BASE_URL: 'http://opensearch:9200'
  OPENSEARCH_INDEX_PREFIX: 'ouragboros'
  OPENSEARCH_JAVA_OPTS: '-Xms4g -Xmx8g'
  PDF_PARSER_MODEL: 'facebook/nougat-small'
  PREFER_OPENSEARCH: 'false'
  PREFER_QDRANT: 'true'
  QDRANT_BASE_URL: 'http://qdrant:6333'
  RAGAS_BASE_URL: 'http://ragas-evaluator:8000'
  SENTENCE_TRANSFORMERS_HOME: 'models'
kind: ConfigMap
metadata:
  labels:
    io.kompose.service: opensearch-kubernetes-env
  name: kubernetes-env
---
# Source: docker-compose/templates/ollama-data-persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: ollama-data
  name: ollama-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Source: docker-compose/templates/opensearch-data-persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: opensearch-data
  name: opensearch-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Persistent volume for HuggingFace models cache and fine-tuned models
# This volume stores both downloaded models and custom fine-tuned models
# Directory structure:
#   - /app/models/models--{org}--{model}/ (HuggingFace cache format)
#   - /app/models/finetuned/{model_name}/ (fine-tuned models directory)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: ouragboros-models
  name: ouragboros-models
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi  # Increased to accommodate multiple fine-tuned models
---
# Source: docker-compose/templates/qdrant-data-persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: qdrant-data
  name: qdrant-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
# Source: docker-compose/templates/ollama-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -c
    kompose.service.type: ClusterIP
    kompose.version: 1.35.0 (HEAD)
    kompose.volume.size: 5Gi
  labels:
    io.kompose.service: ollama
  name: ollama
spec:
  ports:
    - name: "11434"
      port: 11434
      targetPort: 11434
  selector:
    io.kompose.service: ollama
  type: ClusterIP
---
# Source: docker-compose/templates/opensearch-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -c
    kompose.service.type: ClusterIP
    kompose.version: 1.35.0 (HEAD)
    kompose.volume.size: 1Gi
  labels:
    io.kompose.service: opensearch
  name: opensearch
spec:
  ports:
    - name: "9200"
      port: 9200
      targetPort: 9200
  selector:
    io.kompose.service: opensearch
  type: ClusterIP
---
# Source: docker-compose/templates/qdrant-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -c
    kompose.service.type: ClusterIP
    kompose.version: 1.35.0 (HEAD)
    kompose.volume.size: 2Gi
  labels:
    io.kompose.service: qdrant
  name: qdrant
spec:
  ports:
    - name: "6333"
      port: 6333
      targetPort: 6333
    - name: "6334"
      port: 6334
      targetPort: 6334
  selector:
    io.kompose.service: qdrant
  type: ClusterIP
---
# Source: docker-compose/templates/ouragboros-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -c
    kompose.service.expose: "true"
    kompose.version: 1.35.0 (HEAD)
    kompose.volume.size: 3Gi
    metallb.universe.tf/address-pool: sdf-services
  labels:
    io.kompose.service: ouragboros
  name: ouragboros
spec:
  ports:
    - name: "8501"
      port: 8501
      targetPort: 8501
    - name: "8001"
      port: 8001
      targetPort: 8001
  selector:
    io.kompose.service: ouragboros
---
# Source: docker-compose/templates/ollama-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c
    kompose.service.type: ClusterIP
    kompose.version: 1.35.0 (HEAD)
    kompose.volume.size: 5Gi
  labels:
    io.kompose.service: ollama
  name: ollama
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: ollama
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c
        kompose.service.type: ClusterIP
        kompose.version: 1.35.0 (HEAD)
        kompose.volume.size: 5Gi
      labels:
        io.kompose.service: ollama
    spec:
      containers:
        - env:
            - name: OLLAMA_KEEP_ALIVE
              value: 24h
          image: ollama/ollama:0.5.11
          name: ollama
          ports:
            - containerPort: 11434
              protocol: TCP
          volumeMounts:
            - mountPath: /root/.ollama
              name: ollama-data
      restartPolicy: Always
      volumes:
        - name: ollama-data
          persistentVolumeClaim:
            claimName: ollama-data
---
# Source: docker-compose/templates/opensearch-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c
    kompose.service.type: ClusterIP
    kompose.version: 1.35.0 (HEAD)
    kompose.volume.size: 1Gi
  labels:
    io.kompose.service: opensearch
  name: opensearch
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: opensearch
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c
        kompose.service.type: ClusterIP
        kompose.version: 1.35.0 (HEAD)
        kompose.volume.size: 1Gi
      labels:
        io.kompose.service: opensearch
    spec:
      containers:
        - env:
            - name: DISABLE_INSTALL_DEMO_CONFIG
              value: "true"
            - name: DISABLE_SECURITY_PLUGIN
              value: "true"
            - name: HUGGINGFACE_EMBEDDING_MODEL_DEFAULT
              valueFrom:
                configMapKeyRef:
                  key: HUGGINGFACE_EMBEDDING_MODEL_DEFAULT
                  name: kubernetes-env
            - name: HUGGINGFACE_FINETUNED_EMBEDDING_MODEL
              valueFrom:
                configMapKeyRef:
                  key: HUGGINGFACE_FINETUNED_EMBEDDING_MODEL
                  name: kubernetes-env
            - name: OLLAMA_BASE_URL
              valueFrom:
                configMapKeyRef:
                  key: OLLAMA_BASE_URL
                  name: kubernetes-env
            - name: OLLAMA_MODEL_DEFAULT
              valueFrom:
                configMapKeyRef:
                  key: OLLAMA_MODEL_DEFAULT
                  name: kubernetes-env
            - name: OPENAI_API_KEY
              valueFrom:
                configMapKeyRef:
                  key: OPENAI_API_KEY
                  name: kubernetes-env
            - name: OPENSEARCH_BASE_URL
              valueFrom:
                configMapKeyRef:
                  key: OPENSEARCH_BASE_URL
                  name: kubernetes-env
            - name: OPENSEARCH_INDEX_PREFIX
              valueFrom:
                configMapKeyRef:
                  key: OPENSEARCH_INDEX_PREFIX
                  name: kubernetes-env
            - name: OPENSEARCH_JAVA_OPTS
              valueFrom:
                configMapKeyRef:
                  key: OPENSEARCH_JAVA_OPTS
                  name: kubernetes-env
            - name: PDF_PARSER_MODEL
              valueFrom:
                configMapKeyRef:
                  key: PDF_PARSER_MODEL
                  name: kubernetes-env
            - name: PREFER_OPENSEARCH
              valueFrom:
                configMapKeyRef:
                  key: PREFER_OPENSEARCH
                  name: kubernetes-env
            - name: SENTENCE_TRANSFORMERS_HOME
              valueFrom:
                configMapKeyRef:
                  key: SENTENCE_TRANSFORMERS_HOME
                  name: kubernetes-env
            - name: bootstrap.memory_lock
              value: "true"
            - name: discovery.type
              value: single-node
          image: opensearchproject/opensearch:2.19.0
          name: opensearch
          resources:
            requests:
              cpu: "4"
              memory: "10Gi"
            limits:
              cpu: "8"
              memory: "16Gi"
          ports:
            - containerPort: 9200
              protocol: TCP
          volumeMounts:
            - mountPath: /usr/share/opensearch/data
              name: opensearch-data
      restartPolicy: Always
      volumes:
        - name: opensearch-data
          persistentVolumeClaim:
            claimName: opensearch-data
---
# Source: docker-compose/templates/qdrant-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c
    kompose.service.type: ClusterIP
    kompose.version: 1.35.0 (HEAD)
    kompose.volume.size: 2Gi
  labels:
    io.kompose.service: qdrant
  name: qdrant
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: qdrant
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c
        kompose.service.type: ClusterIP
        kompose.version: 1.35.0 (HEAD)
        kompose.volume.size: 2Gi
      labels:
        io.kompose.service: qdrant
    spec:
      containers:
        - env:
            - name: QDRANT__STORAGE__STORAGE_PATH
              value: "/qdrant/storage"
            - name: QDRANT__LOG_LEVEL
              value: "INFO"
            - name: QDRANT__SERVICE__MAX_REQUEST_SIZE_MB
              value: "512"
            - name: QDRANT__SERVICE__HTTP_PORT
              value: "6333"
            - name: QDRANT__SERVICE__GRPC_PORT
              value: "6334"
          image: qdrant/qdrant:v1.12.1
          name: qdrant
          resources:
            requests:
              cpu: "8"
              memory: "32Gi"
            limits:
              cpu: "16"
              memory: "64Gi"
          ports:
            - containerPort: 6333
              protocol: TCP
            - containerPort: 6334
              protocol: TCP
          volumeMounts:
            - mountPath: /qdrant/storage
              name: qdrant-data
      restartPolicy: Always
      volumes:
        - name: qdrant-data
          persistentVolumeClaim:
            claimName: qdrant-data
---
# Source: docker-compose/templates/ouragboros-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c
    kompose.service.expose: "true"
    kompose.version: 1.35.0 (HEAD)
    kompose.volume.size: 3Gi
    metallb.universe.tf/address-pool: sdf-services
  labels:
    io.kompose.service: ouragboros
  name: ouragboros
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: ouragboros
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c
        kompose.service.expose: "true"
        kompose.version: 1.35.0 (HEAD)
        kompose.volume.size: 3Gi
        metallb.universe.tf/address-pool: sdf-services
      labels:
        io.kompose.service: ouragboros
    spec:
      containers:
        - env:
            - name: HUGGINGFACE_EMBEDDING_MODEL_DEFAULT
              valueFrom:
                configMapKeyRef:
                  key: HUGGINGFACE_EMBEDDING_MODEL_DEFAULT
                  name: kubernetes-env
            - name: HUGGINGFACE_FINETUNED_EMBEDDING_MODEL
              valueFrom:
                configMapKeyRef:
                  key: HUGGINGFACE_FINETUNED_EMBEDDING_MODEL
                  name: kubernetes-env
            - name: OLLAMA_BASE_URL
              valueFrom:
                configMapKeyRef:
                  key: OLLAMA_BASE_URL
                  name: kubernetes-env
            - name: OLLAMA_MODEL_DEFAULT
              valueFrom:
                configMapKeyRef:
                  key: OLLAMA_MODEL_DEFAULT
                  name: kubernetes-env
            - name: OPENAI_API_KEY
              valueFrom:
                configMapKeyRef:
                  key: OPENAI_API_KEY
                  name: kubernetes-env
            - name: OPENAI_BASE_URL
              valueFrom:
                configMapKeyRef:
                  key: OPENAI_BASE_URL
                  name: kubernetes-env
            - name: STANFORD_API_KEY
              valueFrom:
                secretKeyRef:
                  name: stanford-ai-secret
                  key: api-key
            - name: STANFORD_BASE_URL
              valueFrom:
                configMapKeyRef:
                  key: STANFORD_BASE_URL
                  name: kubernetes-env
            - name: GOOGLE_API_KEY
              valueFrom:
                configMapKeyRef:
                  key: GOOGLE_API_KEY
                  name: kubernetes-env
            - name: OPENSEARCH_BASE_URL
              valueFrom:
                configMapKeyRef:
                  key: OPENSEARCH_BASE_URL
                  name: kubernetes-env
            - name: OPENSEARCH_INDEX_PREFIX
              valueFrom:
                configMapKeyRef:
                  key: OPENSEARCH_INDEX_PREFIX
                  name: kubernetes-env
            - name: OPENSEARCH_JAVA_OPTS
              valueFrom:
                configMapKeyRef:
                  key: OPENSEARCH_JAVA_OPTS
                  name: kubernetes-env
            - name: PDF_PARSER_MODEL
              valueFrom:
                configMapKeyRef:
                  key: PDF_PARSER_MODEL
                  name: kubernetes-env
            - name: PREFER_OPENSEARCH
              valueFrom:
                configMapKeyRef:
                  key: PREFER_OPENSEARCH
                  name: kubernetes-env
            - name: SENTENCE_TRANSFORMERS_HOME
              valueFrom:
                configMapKeyRef:
                  key: SENTENCE_TRANSFORMERS_HOME
                  name: kubernetes-env
            - name: PREFER_QDRANT
              valueFrom:
                configMapKeyRef:
                  key: PREFER_QDRANT
                  name: kubernetes-env
            - name: QDRANT_BASE_URL
              valueFrom:
                configMapKeyRef:
                  key: QDRANT_BASE_URL
                  name: kubernetes-env
            - name: RAGAS_BASE_URL
              valueFrom:
                configMapKeyRef:
                  key: RAGAS_BASE_URL
                  name: kubernetes-env
          image: slacml/ouragboros:25.10.07
          name: ouragboros
          resources:
            requests:
              cpu: "8"
              memory: "32Gi"
            limits:
              cpu: "16"
              memory: "64Gi"
          ports:
            - containerPort: 8501
              protocol: TCP
            - containerPort: 8001
              protocol: TCP
          volumeMounts:
            - mountPath: /app/models
              name: ouragboros-models
      restartPolicy: Always
      volumes:
        - name: ouragboros-models
          persistentVolumeClaim:
            claimName: ouragboros-models
---
# Source: docker-compose/templates/ouragboros-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kompose.cmd: kompose convert -c
    kompose.service.expose: "true"
    kompose.version: 1.35.0 (HEAD)
    kompose.volume.size: 3Gi
    metallb.universe.tf/address-pool: sdf-services
  labels:
    io.kompose.service: ouragboros
  name: ouragboros
spec:
  rules:
    - http:
        paths:
          - backend:
              service:
                name: ouragboros
                port:
                  number: 8501
            path: /
            pathType: Prefix
