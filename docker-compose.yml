services:
  opensearch:
    image: opensearchproject/opensearch:2.19.0
    labels:
      kompose.service.type: ClusterIP
      kompose.volume.size: 1Gi
    ports:
      - 9200
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=${OPENSEARCH_JAVA_OPTS}"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
    env_file:
      - .kubernetes.env
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    restart: "always"
    ulimits:
      memlock:
        soft: -1
        hard: -1
  ollama:
    image: ollama/ollama:0.5.11
    platform: linux/amd64
    labels:
      kompose.service.type: ClusterIP
      kompose.volume.size: 5Gi
    ports:
      - 11434
    environment:
      - OLLAMA_KEEP_ALIVE=24h
    volumes:
      - ollama_data:/root/.ollama
    restart: "always"
  qdrant:
    image: qdrant/qdrant:v1.12.1
    labels:
      kompose.service.type: ClusterIP
      kompose.volume.size: 2Gi
    ports:
      - 6333:6333  # HTTP API
      - 6334:6334  # gRPC API (optional, for high performance)
    environment:
      - QDRANT__STORAGE__STORAGE_PATH=/qdrant/storage
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=INFO
      # Optimizations for concurrent performance
      - QDRANT__SERVICE__MAX_REQUEST_SIZE_MB=32
      - QDRANT__STORAGE__PERFORMANCE__MAX_SEARCH_THREADS=0  # Use all available CPUs
    volumes:
      - qdrant_data:/qdrant/storage
    restart: "always"
    #deploy:
    #  resources:
    #    reservations:
    #      devices:
    #        - driver: nvidia
    #          count: ${NVIDIA_GPUS}
    #  capabilities: [gpu]
  ouragboros:
    build: .
    image: slacml/ouragboros:latest
    labels:
      kompose.service.expose: "true"
      kompose.volume.size: 3Gi
      metallb.universe.tf/address-pool: sdf-services # Requests an IP address from the sdf-services subnet pool range
    ports:
      - 8501:8501
      - 8001:8001
    environment:
      # Loaded from .env
      #
      - "OLLAMA_BASE_URL=${OLLAMA_BASE_URL}"
      - "OLLAMA_MODEL_DEFAULT=${OLLAMA_MODEL_DEFAULT}"
      - "SENTENCE_TRANSFORMERS_HOME=${SENTENCE_TRANSFORMERS_HOME}"
      - "PDF_PARSER_MODEL=${PDF_PARSER_MODEL}"
      - "OPENSEARCH_BASE_URL=${OPENSEARCH_BASE_URL}"
      - "OPENSEARCH_INDEX_PREFIX=${OPENSEARCH_INDEX_PREFIX}"
      - "PREFER_OPENSEARCH=${PREFER_OPENSEARCH}"
      # Qdrant configuration
      - "QDRANT_BASE_URL=${QDRANT_BASE_URL}"
      - "PREFER_QDRANT=${PREFER_QDRANT}"
      - "HUGGINGFACE_EMBEDDING_MODEL_DEFAULT=${HUGGINGFACE_EMBEDDING_MODEL_DEFAULT}"
      - "HUGGINGFACE_FINETUNED_EMBEDDING_MODEL=${HUGGINGFACE_FINETUNED_EMBEDDING_MODEL}"
      - "OPENAI_API_KEY=${OPENAI_API_KEY}"
      - "GOOGLE_API_KEY=${GOOGLE_API_KEY}"
    env_file:
      - .local.env
    volumes:
      - ouragboros_models:/app/models
    restart: "always"
    depends_on:
      - ollama
      - opensearch
      - qdrant
    #deploy:
    #  resources:
    #    reservations:
    #      devices:
    #        - driver: nvidia
    #          count: ${NVIDIA_GPUS}
    #        #  capabilities: [gpu]
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - .venv/
            - data/
            - models/
        - action: rebuild
          path: ./uv.lock

volumes:
  opensearch_data:
  ollama_data:
  ouragboros_models:
  qdrant_data:
